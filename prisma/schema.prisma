// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id Int @id @default(autoincrement())

  title       String
  description String?
  status      TaskStatusEnum @default(new)

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tasks")
}

enum TaskStatusEnum {
  new
  doing
  completed
  closed
}

model User {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  hashedPassword String? @map("hashed_password")

  tasks      Task[]
  categories Category[]

  role RoleEnum @default(USER)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

enum RoleEnum {
  SUPER_ADMIN
  ADMIN
  USER
}

model Category {
  id Int @id @default(autoincrement())

  title String @unique
  slug  String @unique

  publish Boolean @default(false)

  authorId Int
  author   User @relation(fields: [authorId], references: [id], onDelete: Cascade)
}
